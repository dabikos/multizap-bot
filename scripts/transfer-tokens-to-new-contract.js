const { ethers } = require('ethers');
const config = require('../bot/config');

async function transferTokensToNewContract() {
  try {
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Å–µ—Ç–∏
    const provider = new ethers.JsonRpcProvider(config.RPC_URL);
    const wallet = new ethers.Wallet(config.PRIVATE_KEY, provider);
    
    console.log('–ö–æ—à–µ–ª–µ–∫:', wallet.address);
    
    // –ê–¥—Ä–µ—Å–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤
    const oldContractAddress = '0x49Ef3B442f596bf99d98f5E931ccbd8C3CB1A9f2';
    const marieAddress = '0xFfADDB760c06876588EAA259e34767a99A6b6016';
    
    // ABI –¥–ª—è —Ç–æ–∫–µ–Ω–∞ MARIE
    const tokenABI = [
      'function balanceOf(address account) view returns (uint256)',
      'function transfer(address to, uint256 amount) returns (bool)',
      'function transferFrom(address from, address to, uint256 amount) returns (bool)'
    ];
    
    const token = new ethers.Contract(marieAddress, tokenABI, wallet);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å –≤ —Å—Ç–∞—Ä–æ–º –∫–æ–Ω—Ç—Ä–∞–∫—Ç–µ
    const oldBalance = await token.balanceOf(oldContractAddress);
    console.log('–ë–∞–ª–∞–Ω—Å MARIE –≤ —Å—Ç–∞—Ä–æ–º –∫–æ–Ω—Ç—Ä–∞–∫—Ç–µ:', ethers.formatEther(oldBalance));
    
    if (oldBalance > 0) {
      console.log('–ü–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ —Ç–æ–∫–µ–Ω—ã –∏–∑ —Å—Ç–∞—Ä–æ–≥–æ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞...');
      
      // –ü–æ–ø—Ä–æ–±—É–µ–º –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ —Ç–æ–∫–µ–Ω—ã –Ω–∞–ø—Ä—è–º—É—é
      try {
        const transferTx = await token.transferFrom(oldContractAddress, wallet.address, oldBalance);
        console.log('–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞:', transferTx.hash);
        await transferTx.wait();
        console.log('‚úÖ –¢–æ–∫–µ–Ω—ã –ø–µ—Ä–µ–≤–µ–¥–µ–Ω—ã –≤ –∫–æ—à–µ–ª–µ–∫!');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å –≤ –∫–æ—à–µ–ª—å–∫–µ
        const walletBalance = await token.balanceOf(wallet.address);
        console.log('–ë–∞–ª–∞–Ω—Å MARIE –≤ –∫–æ—à–µ–ª—å–∫–µ:', ethers.formatEther(walletBalance));
        
      } catch (error) {
        console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ —Ç–æ–∫–µ–Ω—ã:', error.message);
        console.log('üí° –¢–æ–∫–µ–Ω MARIE –∏–º–µ–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –Ω–∞ —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä—ã');
        console.log('üí° –ù—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–æ–≤—ã–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç —Å —Ñ—É–Ω–∫—Ü–∏–µ–π sellTokensOnly');
      }
    } else {
      console.log('‚ùå –í —Å—Ç–∞—Ä–æ–º –∫–æ–Ω—Ç—Ä–∞–∫—Ç–µ –Ω–µ—Ç —Ç–æ–∫–µ–Ω–æ–≤ MARIE');
    }
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞:', error.message);
  }
}

transferTokensToNewContract();

